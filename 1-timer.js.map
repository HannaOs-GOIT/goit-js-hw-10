{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  dateInput: document.querySelector('#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet timerId = null;\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    \n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      refs.startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      refs.startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(refs.dateInput, options);\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor((ms % hour) / minute),\n    seconds: Math.floor((ms % minute) / second),\n  };\n};\n\nconst addLeadingZero = value => String(value).padStart(2, '0');\n\nconst updateTimerDisplay = ({ days, hours, minutes, seconds }) => {\n  refs.days.textContent = addLeadingZero(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n};\n\nconst updateTimer = () => {\n  const currentTime = new Date();\n  const timeLeft = userSelectedDate - currentTime;\n\n  if (timeLeft <= 0) {\n    clearInterval(timerId);\n    refs.dateInput.disabled = false;\n    refs.startBtn.disabled = true;\n    updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n     \n    return;\n  }\n\n  updateTimerDisplay(convertMs(timeLeft));\n};\n\nrefs.startBtn.addEventListener('click', () => {\n  refs.startBtn.disabled = true;\n  refs.dateInput.disabled = true;\n  \n  updateTimer();\n  timerId = setInterval(updateTimer, 1000);\n});"],"names":["refs","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","addLeadingZero","value","updateTimerDisplay","days","hours","minutes","seconds","updateTimer","timeLeft"],"mappings":"+IAKA,MAAMA,EAAO,CACX,UAAW,SAAS,cAAc,kBAAkB,EACpD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAU,KACdF,EAAK,SAAS,SAAW,GAEzB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDN,EAAK,SAAS,SAAW,KAEzBC,EAAmBI,EACnBL,EAAK,SAAS,SAAW,GAE5B,CACH,EAEAO,EAAUP,EAAK,UAAWG,CAAO,EAEjC,MAAMK,EAAYC,IAMT,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAM,EACxC,QAAS,KAAK,MAAOA,EAAK,IAAU,GAAM,CAC3C,GAGGC,EAAiBC,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAEvDC,EAAqB,CAAC,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAChEhB,EAAK,KAAK,YAAcU,EAAeG,CAAI,EAC3Cb,EAAK,MAAM,YAAcU,EAAeI,CAAK,EAC7Cd,EAAK,QAAQ,YAAcU,EAAeK,CAAO,EACjDf,EAAK,QAAQ,YAAcU,EAAeM,CAAO,CACnD,EAEMC,EAAc,IAAM,CAExB,MAAMC,EAAWjB,EADG,IAAI,KAGxB,GAAIiB,GAAY,EAAG,CACjB,cAAchB,CAAO,EACrBF,EAAK,UAAU,SAAW,GAC1BA,EAAK,SAAS,SAAW,GACzBY,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,EAAG,EAEhE,MACJ,CAEEA,EAAmBJ,EAAUU,CAAQ,CAAC,CACxC,EAEAlB,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CA,EAAK,SAAS,SAAW,GACzBA,EAAK,UAAU,SAAW,GAE1BiB,EAAa,EACbf,EAAU,YAAYe,EAAa,GAAI,CACzC,CAAC"}